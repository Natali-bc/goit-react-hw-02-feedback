{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","className","styles","statisticsListItem","Section","title","children","FeedbackOptions","handleReview","type","name","btn","onClick","Notification","message","App","state","event","setState","target","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAqCeA,EAjCI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,qCACE,4CACA,+BACE,qBAAIC,UAAWC,IAAOC,mBAAtB,mBAAiDP,KACjD,qBAAIK,UAAWC,IAAOC,mBAAtB,sBAAoDN,KACpD,qBAAII,UAAWC,IAAOC,mBAAtB,kBAAgDL,KAChD,qBAAIG,UAAWC,IAAOC,mBAAtB,oBACUJ,KAEV,qBAAIE,UAAWC,IAAOC,mBAAtB,gCACsBH,EADtB,cCLOI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCgCQC,EAnCS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,OACE,qCACE,wBACEC,KAAK,SACLC,KAAK,OACLT,UAAWC,IAAOS,IAClBC,QAASJ,EAJX,kBAQA,wBACEC,KAAK,SACLC,KAAK,UACLT,UAAWC,IAAOS,IAClBC,QAASJ,EAJX,qBAQA,wBACEC,KAAK,SACLC,KAAK,MACLT,UAAWC,IAAOS,IAClBC,QAASJ,EAJX,qBCRSK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,8BAAMA,OCCNC,G,kNAGJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,aAAe,SAAAS,GACb,EAAKC,UAAS,SAAAF,GAAK,sBAChBC,EAAME,OAAOT,KAAOM,EAAMC,EAAME,OAAOT,MAAQ,O,EAIpDX,mBAAqB,WAAO,IAAD,EACM,EAAKiB,MACpC,OAFyB,EACjBpB,KADiB,EACXC,QADW,EACFC,K,EAIzBE,gCAAkC,WAChC,OAAOoB,KAAKC,MAAO,EAAKL,MAAMpB,KAAO,EAAKG,qBAAwB,M,uDAG1D,IAAD,EACwBuB,KAAKN,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,mCACE,eAAC,EAAD,CAASO,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBG,aAAcc,KAAKd,eACnCc,KAAKvB,qBACJ,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBuB,KAAKvB,qBACzBC,gCAAiCsB,KAAKtB,oCAGxC,cAAC,EAAD,CAAcc,QAAQ,+B,GAxChBS,cAAZR,EACGS,aAAe,GA+CTT,QCnDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,mBAAqB,yC,kBCAvCD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.38393662.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Statistics/Statistics.module.css';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li className={styles.statisticsListItem}>Good: {good}</li>\r\n        <li className={styles.statisticsListItem}>Neutral: {neutral}</li>\r\n        <li className={styles.statisticsListItem}>Bad: {bad}</li>\r\n        <li className={styles.statisticsListItem}>\r\n          Total: {countTotalFeedback}\r\n        </li>\r\n        <li className={styles.statisticsListItem}>\r\n          Positive feedback: {countPositiveFeedbackPercentage}%\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  countTotalFeedback: PropTypes.number.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ handleReview }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        className={styles.btn}\r\n        onClick={handleReview}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        className={styles.btn}\r\n        onClick={handleReview}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        className={styles.btn}\r\n        onClick={handleReview}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleReview: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <div>{message}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics.jsx';\nimport Section from './components/Section/Section.jsx';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.jsx';\nimport Notification from './components/Notification/Notification.jsx';\nimport styles from './components/Section/Section.module.css';\n\nclass App extends Component {\n  static defaultProps = {};\n  static propTypes = {};\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleReview = event => {\n    this.setState(state => ({\n      [event.target.name]: state[event.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions handleReview={this.handleReview} />\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              countTotalFeedback={this.countTotalFeedback()}\n              countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsListItem\":\"Statistics_statisticsListItem__1k7rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2r_7L\"};"],"sourceRoot":""}